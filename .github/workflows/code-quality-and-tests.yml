name: 'Code quality and tests'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  cqat_setup:
    name: Setup environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        name: Install pnpm 📦
        with:
          run_install: false
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Install dependencies 🔧
        run: pnpm install --frozen-lockfile

  cqat_validate_commits:
    name: Validate commit messages
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: cqat_setup
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v4
        name: Install pnpm 📦
        with:
          run_install: false
      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Validate pull request commits 📝
        run: pnpm exec commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

  cqat_check_sourcecode:
    name: Check source code
    runs-on: ubuntu-latest
    needs: [cqat_setup, cqat_validate_commits]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        name: Install pnpm 📦
        with:
          run_install: false
      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Run Prettier 📃
        run: pnpm exec prettier --check --ignore-unknown .
      - name: Run ESLint 📝
        # run: pnpm exec eslint .
        run: echo Command disabled

  cqat_test_units:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: [cqat_setup, cqat_validate_commits]
    strategy:
      matrix:
        node-version: [18, 20, 22, 23]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        name: Install pnpm 📦
        with:
          run_install: false
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Run Jest 🃏
        # run: pnpm exec jest --ci --config=jest.config.workflow-ci.mjs
        run: echo Command disabled
